id char(4) primary key = 가장 기본적인 헥심적인 코드.
mariaDB varchar 최대 길이 = 255

CREATE SEQUENCE S_bulitine_board; // 시퀀스 보드 이름 : S_bulitine_board; 만들기
nextval // 다음값 주세요.


//s값의 nv를 seq라 하고 출력한다. nv안에는 nextval(다음값) (S_bulitine_board)값이 있다.

SELECT seed
FROM t_id_seed, (SELECT nextval (S_bulitine_board) AS nv) s
WHERE seq = s.nv

 EXISTS // 데이터 확인 쿼리, 두번째로 고급진 입력어.

DELIMITER $$

CREATE FUNCTION 'fn_get_sequence'('p_seq_name' VARCHAR(255)) RETURNS char(4)
BEGIN
	DECLARE r_sequence_no INT;
	DECLARE r_sequence CHAR(4);

-- tb_sequence 테이블의 sequence_no를 +1 합니다.
	UPDATE tb_sequence SET NUM = NUM + 1  WHERE NAME = p_seq_name;

--시퀀스 테이블에서 사용할 시퀀스이름에 시퀀스 번호를 조회합니다.
--조회한 값을 r_sequence_no 변수에 담아줍니다. (INTO 이용)
	SELECT NUM INTO r_sequence_no FROM tb_sequence WHERE NAME = p_seq_name;

-- CONCAT 함수를 이용하여 시퀀스이름 + 인덱스값을 추가하고 r_sequence 변수에 저장합니다.
-- LPAD 함수 왼쪽에 특정 문자를 원하는 자리수만큼 넣어줍니다. LPAD(문자, 자리수, 채울문자)
-- ex) LPAD('1', 4, '0') -> '0001'
	SELECT SEED INTO r_sequence FROM T_ID_SEED WHERE SEQ = r_sequence_no
-- r_sequence를 반환합니다.

	RETURN r_sequence;
END $$

DELIMITER;



